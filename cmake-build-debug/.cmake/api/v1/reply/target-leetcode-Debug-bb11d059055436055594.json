{
	"artifacts" : 
	[
		{
			"path" : "leetcode"
		}
	],
	"backtrace" : 1,
	"backtraceGraph" : 
	{
		"commands" : 
		[
			"add_executable",
			"include_directories"
		],
		"files" : 
		[
			"CMakeLists.txt"
		],
		"nodes" : 
		[
			{
				"file" : 0
			},
			{
				"command" : 0,
				"file" : 0,
				"line" : 8,
				"parent" : 0
			},
			{
				"command" : 1,
				"file" : 0,
				"line" : 6,
				"parent" : 0
			}
		]
	},
	"compileGroups" : 
	[
		{
			"compileCommandFragments" : 
			[
				{
					"fragment" : "-g -arch arm64 -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX12.1.sdk"
				},
				{
					"fragment" : "-std=gnu++14"
				}
			],
			"includes" : 
			[
				{
					"backtrace" : 2,
					"path" : "/Users/deepak/CLionProjects/leetcode/cmake-build-debug/.."
				}
			],
			"language" : "CXX",
			"languageStandard" : 
			{
				"backtraces" : 
				[
					1
				],
				"standard" : "14"
			},
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12,
				13,
				14,
				15,
				16,
				17,
				18,
				19,
				20,
				21,
				22,
				23,
				24,
				25,
				26,
				27,
				28,
				29,
				30,
				31,
				32,
				33,
				34,
				35,
				36,
				37,
				38,
				39,
				40,
				41,
				42,
				43,
				44,
				45,
				46,
				47,
				48,
				49,
				50,
				51,
				52,
				53,
				54,
				55,
				56,
				57,
				58,
				59,
				60,
				61,
				62,
				63,
				64,
				65,
				66,
				67,
				68,
				69,
				70,
				71,
				72,
				73,
				74,
				75,
				76,
				77,
				78,
				79,
				80,
				81,
				82,
				83,
				84,
				85,
				86,
				87,
				88,
				89,
				90,
				91,
				92,
				93,
				94,
				95,
				96,
				97,
				98,
				99,
				100,
				101,
				102,
				103,
				104,
				105,
				106,
				107,
				108,
				109,
				110,
				111,
				112,
				113,
				114,
				115,
				116,
				117,
				118,
				119,
				120,
				121,
				122,
				123,
				124,
				125,
				126,
				127,
				128,
				129,
				130,
				131,
				132,
				133,
				134,
				135,
				136,
				137,
				138,
				139,
				140,
				141,
				142,
				143,
				144,
				145,
				146,
				147,
				148,
				149,
				150,
				151,
				152,
				153,
				154,
				155,
				156,
				157,
				158,
				159,
				160,
				161,
				162,
				163,
				164,
				165,
				166,
				167,
				168,
				169,
				170,
				171,
				172,
				173,
				174,
				175,
				176,
				177,
				178,
				179,
				180,
				181,
				182,
				183,
				184,
				185,
				186,
				187,
				188,
				189,
				190,
				191,
				192,
				193,
				194,
				195,
				196,
				197,
				198,
				199,
				200,
				201,
				202,
				203,
				204,
				205,
				206,
				207,
				208,
				209,
				210,
				211,
				212,
				213,
				214,
				215,
				216,
				217,
				218,
				219,
				220,
				221,
				222,
				223,
				224,
				225,
				226,
				227,
				228,
				229,
				230,
				231,
				232,
				233,
				234,
				235,
				236,
				237,
				238,
				239,
				240,
				241,
				242,
				243,
				244,
				245,
				246,
				247,
				248,
				249,
				250,
				251,
				252,
				253,
				254,
				255,
				256,
				257,
				258,
				259,
				260,
				261,
				262,
				263,
				264,
				265,
				266,
				267,
				268,
				269,
				270,
				271,
				272,
				273,
				274,
				275,
				276,
				277,
				278,
				279,
				280,
				281,
				282,
				283,
				284,
				285,
				286,
				287,
				288,
				289,
				290,
				291,
				292,
				293,
				294,
				295,
				296,
				297,
				298,
				299,
				300,
				301,
				302,
				303,
				304,
				305,
				306,
				307,
				308,
				309,
				310,
				311,
				312,
				313,
				314,
				315,
				316,
				317,
				318,
				319,
				320,
				321,
				322,
				323,
				324,
				325,
				326,
				327,
				328,
				329,
				330,
				331,
				332,
				333,
				334,
				335,
				336,
				337,
				338,
				339,
				340,
				341,
				342,
				343,
				344,
				345,
				346,
				347,
				348,
				349,
				350,
				351,
				352,
				353,
				354,
				355,
				356,
				357,
				358,
				359,
				360,
				361,
				362,
				363,
				364,
				365,
				366,
				367,
				368,
				369,
				370,
				371,
				372,
				373,
				374,
				375,
				376,
				377,
				378,
				379,
				380,
				381,
				382,
				383,
				384,
				385,
				386,
				387,
				388,
				389,
				390,
				392,
				393,
				394,
				395,
				396,
				397,
				398,
				399,
				400,
				402,
				403,
				404,
				405,
				406,
				407,
				408,
				409,
				410,
				411,
				412,
				413,
				414,
				415,
				416,
				417,
				418,
				419,
				420,
				421,
				422,
				423,
				424,
				425,
				426,
				427,
				428,
				429,
				430,
				431,
				432,
				433,
				434,
				435,
				436,
				437,
				438,
				439,
				440,
				441,
				442,
				443,
				444,
				445,
				446,
				447,
				448,
				449,
				450,
				451,
				452,
				453,
				454,
				455,
				456,
				457,
				458,
				459,
				460,
				461,
				462,
				463,
				464,
				465,
				466,
				467,
				468,
				469,
				470,
				471,
				472,
				473,
				474,
				475,
				476,
				477,
				478,
				479,
				480,
				481,
				482,
				483,
				484,
				485,
				486,
				487,
				488,
				489,
				490,
				491,
				492,
				493,
				494,
				495,
				496,
				497,
				498,
				499,
				500
			]
		}
	],
	"id" : "leetcode::@6890427a1f51a3e7e1df",
	"link" : 
	{
		"commandFragments" : 
		[
			{
				"fragment" : "-g",
				"role" : "flags"
			},
			{
				"fragment" : "",
				"role" : "flags"
			}
		],
		"language" : "CXX"
	},
	"name" : "leetcode",
	"nameOnDisk" : "leetcode",
	"paths" : 
	{
		"build" : ".",
		"source" : "."
	},
	"sourceGroups" : 
	[
		{
			"name" : "Source Files",
			"sourceIndexes" : 
			[
				0,
				1,
				2,
				3,
				4,
				5,
				6,
				7,
				8,
				9,
				10,
				11,
				12,
				13,
				14,
				15,
				16,
				17,
				18,
				19,
				20,
				21,
				22,
				23,
				24,
				25,
				26,
				27,
				28,
				29,
				30,
				31,
				32,
				33,
				34,
				35,
				36,
				37,
				38,
				39,
				40,
				41,
				42,
				43,
				44,
				45,
				46,
				47,
				48,
				49,
				50,
				51,
				52,
				53,
				54,
				55,
				56,
				57,
				58,
				59,
				60,
				61,
				62,
				63,
				64,
				65,
				66,
				67,
				68,
				69,
				70,
				71,
				72,
				73,
				74,
				75,
				76,
				77,
				78,
				79,
				80,
				81,
				82,
				83,
				84,
				85,
				86,
				87,
				88,
				89,
				90,
				91,
				92,
				93,
				94,
				95,
				96,
				97,
				98,
				99,
				100,
				101,
				102,
				103,
				104,
				105,
				106,
				107,
				108,
				109,
				110,
				111,
				112,
				113,
				114,
				115,
				116,
				117,
				118,
				119,
				120,
				121,
				122,
				123,
				124,
				125,
				126,
				127,
				128,
				129,
				130,
				131,
				132,
				133,
				134,
				135,
				136,
				137,
				138,
				139,
				140,
				141,
				142,
				143,
				144,
				145,
				146,
				147,
				148,
				149,
				150,
				151,
				152,
				153,
				154,
				155,
				156,
				157,
				158,
				159,
				160,
				161,
				162,
				163,
				164,
				165,
				166,
				167,
				168,
				169,
				170,
				171,
				172,
				173,
				174,
				175,
				176,
				177,
				178,
				179,
				180,
				181,
				182,
				183,
				184,
				185,
				186,
				187,
				188,
				189,
				190,
				191,
				192,
				193,
				194,
				195,
				196,
				197,
				198,
				199,
				200,
				201,
				202,
				203,
				204,
				205,
				206,
				207,
				208,
				209,
				210,
				211,
				212,
				213,
				214,
				215,
				216,
				217,
				218,
				219,
				220,
				221,
				222,
				223,
				224,
				225,
				226,
				227,
				228,
				229,
				230,
				231,
				232,
				233,
				234,
				235,
				236,
				237,
				238,
				239,
				240,
				241,
				242,
				243,
				244,
				245,
				246,
				247,
				248,
				249,
				250,
				251,
				252,
				253,
				254,
				255,
				256,
				257,
				258,
				259,
				260,
				261,
				262,
				263,
				264,
				265,
				266,
				267,
				268,
				269,
				270,
				271,
				272,
				273,
				274,
				275,
				276,
				277,
				278,
				279,
				280,
				281,
				282,
				283,
				284,
				285,
				286,
				287,
				288,
				289,
				290,
				291,
				292,
				293,
				294,
				295,
				296,
				297,
				298,
				299,
				300,
				301,
				302,
				303,
				304,
				305,
				306,
				307,
				308,
				309,
				310,
				311,
				312,
				313,
				314,
				315,
				316,
				317,
				318,
				319,
				320,
				321,
				322,
				323,
				324,
				325,
				326,
				327,
				328,
				329,
				330,
				331,
				332,
				333,
				334,
				335,
				336,
				337,
				338,
				339,
				340,
				341,
				342,
				343,
				344,
				345,
				346,
				347,
				348,
				349,
				350,
				351,
				352,
				353,
				354,
				355,
				356,
				357,
				358,
				359,
				360,
				361,
				362,
				363,
				364,
				365,
				366,
				367,
				368,
				369,
				370,
				371,
				372,
				373,
				374,
				375,
				376,
				377,
				378,
				379,
				380,
				381,
				382,
				383,
				384,
				385,
				386,
				387,
				388,
				389,
				390,
				392,
				393,
				394,
				395,
				396,
				397,
				398,
				399,
				400,
				402,
				403,
				404,
				405,
				406,
				407,
				408,
				409,
				410,
				411,
				412,
				413,
				414,
				415,
				416,
				417,
				418,
				419,
				420,
				421,
				422,
				423,
				424,
				425,
				426,
				427,
				428,
				429,
				430,
				431,
				432,
				433,
				434,
				435,
				436,
				437,
				438,
				439,
				440,
				441,
				442,
				443,
				444,
				445,
				446,
				447,
				448,
				449,
				450,
				451,
				452,
				453,
				454,
				455,
				456,
				457,
				458,
				459,
				460,
				461,
				462,
				463,
				464,
				465,
				466,
				467,
				468,
				469,
				470,
				471,
				472,
				473,
				474,
				475,
				476,
				477,
				478,
				479,
				480,
				481,
				482,
				483,
				484,
				485,
				486,
				487,
				488,
				489,
				490,
				491,
				492,
				493,
				494,
				495,
				496,
				497,
				498,
				499,
				500
			]
		},
		{
			"name" : "Header Files",
			"sourceIndexes" : 
			[
				391,
				401
			]
		}
	],
	"sources" : 
	[
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1. Check Array Formation Through Concatenation.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1. Convert Binary Number in a Linked List to Integer.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1. Largest Time for Given Digits.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1. Making A Large Island.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1. Max Area of Island.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1. Maximum Average Subtree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1. Maximum Depth of Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1.Arranging Coins.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1.Detect Capital.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1.Invert Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1.Longest Common Subsequence.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1.Paint House.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/10. Create Sorted Array through Instructions.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/10. Excel Sheet Column Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/10. Flipping an Image.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/10. Remove Duplicates from Sorted Array II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/10.Find the Town Judge.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/10.Flatten a Multilevel Doubly Linked List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/10.Search Insert Position.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/100. Same Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1004. Max Consecutive Ones III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/101. Symmetric Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/102. Binary Tree Level Order Traversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1021. Remove Outermost Parentheses.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1047. Remove All Adjacent Duplicates In String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/105. Construct Binary Tree from Preorder and Inorder Traversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1053. Previous Permutation With One Swap.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1060. Missing Element in Sorted Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/11. Container With Most Water.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/11. Diameter of Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/11. Merge Sorted Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/11. Valid Square.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/11.Flood Fill.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/11.H-Index.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/11.Smallest Subtree with all the Deepest Nodes.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/11.Sort Colors.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/11.Subsets.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1120. Maximum Average Subtree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1144. Decrease Elements To Make Array Zigzag.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/12. Add Two Numbers.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/12. Burst Balloons.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/12. Permutations II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/12.Insert Delete GetRandom O(1).cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/12.Pascal's Triangle II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/12.Reverse Bits.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/12.Single Element in a Sorted Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/120. Triangle.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1213. Intersection of Three Sorted Arrays.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1216. Valid Palindrome III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1221. Split a String in Balanced Strings.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1234. Replace the Substring for Balanced String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/124. Binary Tree Maximum Path Sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1249. Minimum Remove to Make Valid Parentheses.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/127. Word Ladder.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1275. Find Winner on a Tic Tac Toe Game.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/13. Boats to Save People.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/13. Construct Binary Search Tree from Preorder Traversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/13. Palindrome Partitioning.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/13. Populating Next Right Pointers in Each Node.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/13. Same Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/13.Largest Divisible Subset.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/13.Remove K Digits.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1342. Number of Steps to Reduce a Number to Zero.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1351. Count Negative Numbers in a Sorted Matrix.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1358. Number of Substrings Containing All Three Characters.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/136. Single Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1361. Validate Binary Tree Nodes.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1365. How Many Numbers Are Smaller Than the Current Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1370. Increasing Decreasing String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1374. Generate a String With Characters That Have Odd Counts.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1379. Find a Corresponding Node of a Binary Tree in a Clone of That Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1382. Balance a Binary Search Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1389. Create Target Array in the Given Order.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/139. Word Break.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/14. Longest Palindrome.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/14. Minimum Operations to Reduce X to Zero.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/14. Perfect Squares.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/14. Squares of a Sorted Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/14.Angle Between Hands of a Clock.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/14.Cheapest Flights Within K Stops.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/14.Implement Trie (Prefix Tree).cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/140. Word Break II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1428. Leftmost Column with at Least a One.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1431. Kids With the Greatest Number of Candies.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1436. Destination City.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1438. Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/146. LRU Cache.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1498. Number of Subsequences That Satisfy the Given Sum Condition.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/15. Best Time to Buy and Sell Stock with Cooldown.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/15. Get Maximum in Generated Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/15. Non-overlapping Intervals.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/15. Range Sum of BST.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/15. Spiral Matrix.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/15. Validate Binary Search Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/15.Maximum Sum Circular Subarray.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/15.Reverse Words in a String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/15.Search in a Binary Search Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/151. Reverse Words in a String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1522. Diameter of N-Ary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/154. Find Minimum in Rotated Sorted Array II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1570. Dot Product of Two Sparse Vectors.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/16. 123. Best Time to Buy and Sell Stock III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/16. 3Sum Closest.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/16. 4Sum II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/16. Best Time to Buy and Sell Stock III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/16. Kth Largest Element in an Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/16. Longest Mountain in Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/16.Odd Even Linked List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/16.Validate IP Address.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/162. Find Peak Element.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/163. Missing Ranges.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/168. Excel Sheet Column Title.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/17. Count Sorted Vowel Strings.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/17. Increasing Triplet Subsequence.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/17. Letter Combinations of a Phone Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/17. Top K Frequent Elements.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/17.Distribute Candies to People.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/17.Find All Anagrams in a String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/17.Mirror Reflection.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/17.Surrounded Regions.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1762. Buildings With an Ocean View.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1793. Maximum Score of a Good Subarray.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/18. Decode String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/18. Expression Add Operators.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/18. Numbers With Same Consecutive Differences.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/18.Course Schedule II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/18.H-Index II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/18.Max Number of K-Sum Pairs.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/18.Permutation in String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/1888. Minimum Number of Flips to Make the Binary String Alternating.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/19. Decoded String at Index.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/19. Distinct Subsequences.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/19. Goat Latin.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/19. Remove Nth Node From End of List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/19. Search in Rotated Sorted Array II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/19.Add Binary.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/19.Longest Duplicate Substring.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/19.Maximum Product of Splitted Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/19.Online Stock Span.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/199. Binary Tree Right Side View.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2. Add Two Numbers.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2. Array Nesting.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2. Find a Corresponding Node of a Binary Tree in a Clone of That Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2. Insertion Sort List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2. Interleaving String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2. Two Sums.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2.Binary Tree Level Order Traversal II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2.Contains Duplicate III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2.Delete Node in a Linked List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2.Design HashSet.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/2.Linked List Random Node.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/20. Reorder List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/20. Smallest Range II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/20. Valid Parentheses.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/20.Kth Smallest Element in a BST.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/20.Numbers At Most N Given Digit Set.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/20.Permutation Sequence.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/20.Remove Linked List Elements.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/209. Minimum Size Subarray Sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/21. House Robber III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/21. Merge Two Sorted Lists.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/21.Balanced Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/21.Count Square Submatrices with All Ones.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/21.Dungeon Game.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/21.Max Consecutive Ones.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/21.Sort Array By Parity.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/21.Word Search.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/22. Basic Calculator II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/22. Generate Parentheses.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/22. Maximum Length of a Concatenated String with Unique Characters.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/22. Next Greater Element III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/22.Binary Tree Zigzag Level Order Traversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/22.Single Number II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/22.Sort Characters By Frequency.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/23. Merge k Sorted Lists.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/23. Smallest Integer Divisible by K.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/23. Stream of Characters.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/23.Count Complete Tree Nodes.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/23.Interval List Intersections.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/23.Single Number III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/230. Kth Smallest Element in a BST.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/234. Palindrome Linked List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/236. Lowest Common Ancestor of a Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/238. Product of Array Except Self.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/24. Longest Substring with At Least K Repeating Characters.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/24. Swap Nodes in Pairs.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/24. Unique Binary Search Trees.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/24.All Paths From Source to Target.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/24.Construct Binary Search Tree from Preorder Traversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/24.Sum of Left Leaves.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/246. Strobogrammatic Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/249. Group Shifted Strings.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/25. Minimum Cost For Tickets.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/25. Reverse Nodes in k-Group II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/25. Reverse Nodes in k-Group.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/25.Find Minimum in Rotated Sorted Array II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/25.Find the Duplicate Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/25.Partition Equal Subset Sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/25.Uncrossed Lines.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/253. Meeting Rooms II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/26. Fizz Buzz.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/26. Remove Duplicates from Sorted Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/26.Add Digits.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/26.Contiguous Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/26.Sum Root to Leaf Numbers.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/260. Single Number III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/268. Missing Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/269. Alien Dictionary.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/27. Unique Email Addresses.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/27.Construct Binary Tree from Inorder and Postorder Traversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/27.Find Right Interval.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/27.Perfect Squares.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/27.Possible partition.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/270. Closest Binary Search Tree Value.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/273. Integer to English Words.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/28. Shortest Path in a Grid with Obstacles Elimination.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/28. Sort Array By Parity II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/28.Counting Bits.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/28.Task Scheduler.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/283. Move Zeroes.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/286. Walls and Gates.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/29. Best Time to Buy and Sell Stock with Cooldown.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/29. Pancake Sorting.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/29. Split Linked List in Parts.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/29. Unique Paths.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/29.Course Schedule.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/295. Find Median from Data Stream.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/297. Serialize and Deserialize Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3. Beautiful Arrangement.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3. Increasing Order Search Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3.Consecutive Characters.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3.Dungeon Game.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3.Maximum Area of a Piece of Cake After Horizontal and Vertical Cuts.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3.Prison Cells After N Days.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3.Ransom Note.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3.Repeated Substring Pattern.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3.Subsets II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3.Two City Scheduling.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/3.Valid Palindrome.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/30. Largest Component Size by Common Factor.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/30.K Closest Points to Origin.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/30.Word Search II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/301. Remove Invalid Parentheses.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/31. Next Permutation.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/31.Climbing Stairs.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/31.Delete Node in a BST.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/31.Minimum Edit Distance.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/311. Sparse Matrix Multiplication.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/314. Binary Tree Vertical Order Traversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/329. Longest Increasing Path in a Matrix.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/33. Search in Rotated Sorted Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/333. Largest BST Subtree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/34. Find First and Last Position of Element in Sorted Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/340. Longest Substring with At Most K Distinct Characters.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/36. Valid Sudoku.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/378. Kth Smallest Element in a Sorted Matrix.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/38. Count and Say.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/381. Insert Delete GetRandom O(1) - Duplicates allowed.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/39. Combination Sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/398. Random Pick Index.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. Island Perimeter.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. Jump Game.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. Median of Two Sorted Arrays.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. Merge Two Sorted Lists.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. Minimum Height Trees.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. Number Complement.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. Open the Lock.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. Path Sum II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. Sum of Distances in Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4. The kth Factor of n.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4.1 Jump Game II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4.Power of Four.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4.Reverse String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/4.Ugly Number II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/415. Add Strings.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/42. Trapping Rain Water.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/426. Convert Binary Search Tree to Sorted Doubly Linked List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/43. Multiply Strings.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/438. Find All Anagrams in a String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/448. Find All Numbers Disappeared in an Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/46. Permutations.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/48. Rotate Image.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/49. Group Anagrams.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/496. Next Greater Element I.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/498. Diagonal Traverse.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5. Can Place Flowers.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5. Find All Duplicates in an Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5. Longest Palindromic Substring.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5. Maximum Performance of a Team.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5. Minimum Cost to Move Chips to The Same Position.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5. Remove Duplicates from Sorted List II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5. Stone Game.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5.Add and Search Word - Data structure design.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5.First Unique Character in a String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5.Hamming Distance.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5.Queue Reconstruction by Height.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/50. Pow(x, n).cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/51. N-Queens.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5186. Range Frequency Queries.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5201. Watering Plants.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/523. Continuous Subarray Sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/525. Contiguous Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/542. 01 Matrix.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/543. Diameter of Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/560. Subarray Sum Equals K.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5930. Two Furthest Houses With Different Colors.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5938. Find Target Indices After Sorting Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5939. K Radius Subarray Averages.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5940. Removing Minimum and Maximum From Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5942. Finding 3-Digit Even Numbers.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5943. Delete the Middle Node of a Linked List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5944. Step-By-Step Directions From a Binary Tree Node to Another.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5953. Sum of Subarray Ranges.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5954. Watering Plants II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5956. Find First Palindromic String in the Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5957. Adding Spaces to a String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5958. Number of Smooth Descent Periods of a Stock.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/5959. Minimum Operations to Make the Array K-Increasing.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/6. Find the Smallest Divisor Given a Threshold.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/6. Kth Missing Positive Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/6. ZigZag Conversion.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/6.Find All Duplicates in an Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/6.Majority Element.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/6.Populating Next Right Pointers in Each Node II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/6.Random Pick with Weight.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/616. Add Bold Tag in String.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/62. Unique Paths.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/621. Task Scheduler.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/636. Exclusive Time of Functions.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/637. Average of Levels in Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/65. Valid Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/66. Plus One.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/666. Path Sum IV.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/667. Beautiful Arrangement II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/668. Kth Smallest Number in Multiplication Table.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/670. Maximum Swap.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/680. Valid Palindrome II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/689. Maximum Sum of 3 Non-Overlapping Subarrays.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/69. Sqrt(x).cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/695. Max Area of Island.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/7. Add Two Numbers II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/7. Coin Change 2.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/7. Longest Substring Without Repeating Characters.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/7. Reverse Integer.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/7. Reverse Integer2.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/7. Spiral Matrix II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/7.Cousins in Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/7.Island Perimeter.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/7.Vertical Order Traversal of a Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/70. Climbing Stairs.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/708. Insert into a Sorted Circular Linked List.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/71. Simplify Path.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/721. Accounts Merge.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/724. Find Pivot Index.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/73. Set Matrix Zeroes.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/739. Daily Temperatures.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/76. Minimum Window Substring.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/766. Toeplitz Matrix.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/785. Is Graph Bipartite.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/8. Binary Tree Tilt.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/8. Check If Two String Arrays are Equivalent.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/8. Pairs of Songs With Total Durations Divisible by 60.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/8. Path Sum III.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/8.3Sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/8.Check If It Is a Straight Line.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/8.Power of Two.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/804. Unique Morse Code Words.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/827. Making A Large Island.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/84. Largest Rectangle in Histogram.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/844. Backspace String Compare.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/848. Shifting Letters.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/863. All Nodes Distance K in Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/896. Monotonic Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/9. Maximum Difference Between Node and Ancestor.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/9. Palindrome Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/9. Rotting Oranges.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/9. Valid Mountain Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/9. Word Ladder.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/9.Is Subsequence.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/9.Maximum Width of Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/9.Valid Perfect Square.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/95. Unique Binary Search Trees II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/953. Verifying an Alien Dictionary.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/958. Check Completeness of a Binary Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/974. Subarray Sums Divisible by K.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/977. Squares of a Sorted Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/assignment1_problem1_Bruteforce.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/Assignment1_problem1_IterativeO(n).cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/assignment1_problem1_recursive.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/assignment2_problem1_strassen.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/CreateATreeWithArray.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "/Users/deepak/CLionProjects/leetcode/CreateATreeWithArray.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/Databricks.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/delete duplicates in the linked list.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/Dremio.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/House Robber II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/interviewBit_Sum binary tree or not.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/isBinaryTreeAAvg.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/isThisATree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/linked list.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/LinkedList.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"path" : "/Users/deepak/CLionProjects/leetcode/LinkedList.h",
			"sourceGroupIndex" : 1
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/Lucid.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/Oindrill2cpp.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/oindrilla 1.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/Rings and Rods3.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/shashwat.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/Source.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/Subset Sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/team scheduling algorithm.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Old Leetcode/99. Recover Binary Search Tree .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/OA/Shashwar Norton/Q1.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/108. Convert Sorted Array to Binary Search Tree.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/12-25-2021/5963. A Number After a Double Reversal.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/12-25-2021/5964. Execution of All Suffix Instructions Staying in a Grid.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/12-25-2021/5965. Intervals Between Identical Elements.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/428. Serialize and Deserialize N-ary Tree .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/12. Integer to Roman .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Tutorial/Multithreading/multithreading.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/64. Minimum Path Sum .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/30. Substring with Concatenation of All Words .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/678. Valid Parenthesis String .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/277. Find the Celebrity .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/403. Frog Jump .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1463. Cherry Pickup II .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/316. Remove Duplicate Letters .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1740. Find Distance in a Binary Tree .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/Test.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1229. Meeting Scheduler .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1487. Making File Names Unique .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/795. Number of Subarrays with Bounded Maximum .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1171. Remove Zero Sum Consecutive Nodes from Linked List .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-1-2022/1. Check if All A's Appears Before All B's.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-1-2022/5968. Number of Laser Beams in a Bank.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-1-2022/5969. Destroying Asteroids.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/988. Smallest String Starting From Leaf .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/341. Flatten Nested List Iterator .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/539. Minimum Time Difference .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/873. Length of Longest Fibonacci Subsequence .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/202. Happy Number .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/121. Best Time to Buy and Sell Stock .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/XCOM/Q1.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/706. Design HashMap .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/934. Shortest Bridge .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/362. Design Hit Counter .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1732. Find the Highest Altitude .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1373. Maximum Sum BST in Binary Tree .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/503. Next Greater Element II .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-08-2022/5976. Check if Every Row and Column Contains All Numbers.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-08-2022/5977. Minimum Swaps to Group All 1's Together II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-08-2022/5978. Count Words Obtained After Adding a Letter.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/622. Design Circular Queue .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1007. Minimum Domino Rotations For Equal Row .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/696. Count Binary Substrings .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/679. 24 Game .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/139. Word Break .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/188. Best Time to Buy and Sell Stock IV .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/322. Coin Change .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/75. Sort Colors .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/140. Word Break II .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-22-2022/5989. Count Elements With Strictly Smaller and Greater Elements.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-22-2022/5991. Rearrange Array Elements by Sign.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-22-2022/5990. Find All Lonely Numbers in the Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/520. Detect Capital .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1291. Sequential Digits .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-29-2022/Keep Multiplying Found Values by Two.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-29-2022/5981. All Divisions With the Highest Score of a Binary Array.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Jan-29-2022/5994. Find Substring With Given Hash Value.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/189. Rotate Array .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1672. Richest Customer Wealth .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Monthly Challenge/Feb 2022/438. Find All Anagrams in a String .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/109. Convert Sorted List to Binary Search Tree .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/110. Balanced Binary Tree .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/112. Path Sum .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-5-2022/6000. Sort Even and Odd Indices Independently.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-5-2022/6001. Smallest Value of the Rearranged Number.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-5-2022/6002. Design Bitset.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/389. Find the Difference .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/160. Intersection of Two Linked Lists .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/91. Decode Ways .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/OA/Shashwat zscalar/Q1.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Monthly Challenge/Feb 2022/532. K-diff Pairs in an Array .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-12-2022/6004. Count Operations to Obtain Zero.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-12-2022/6005. Minimum Operations to Make the Array Alternating.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Monthly Challenge/Feb 2022/78. Subsets .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1101. The Earliest Moment When Everyone Become Friends .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1100. Find K-Length Substrings With No Repeated Characters .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Monthly Challenge/Feb 2022/24. Swap Nodes in Pairs .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Monthly Challenge/Feb 2022/39. Combination Sum .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Monthly Challenge/Feb 2022/402. Remove K Digits .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-19-2022/6012. Count Integers With Even Digit Sum.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-19-2022/6013. Merge Nodes in Between Zeros.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-19-2022/6014. Construct String With Repeat Limit.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-19-2022/6015. Count Array Pairs Divisible by K.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/165. Compare Version Numbers .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/1288. Remove Covered Intervals .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/NumOfTaskCanBePerformed.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/Problems/847. Shortest Path Visiting All Nodes .cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-26-2022/6008. Counting Words With a Given Prefix.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-26-2022/6009. Minimum Number of Steps to Make Two Strings Anagram II.cpp",
			"sourceGroupIndex" : 0
		},
		{
			"backtrace" : 1,
			"compileGroupIndex" : 0,
			"path" : "/Users/deepak/CLionProjects/leetcode/weekley Contest/Feb-26-2022/6010. Minimum Time to Complete Trips.cpp",
			"sourceGroupIndex" : 0
		}
	],
	"type" : "EXECUTABLE"
}
